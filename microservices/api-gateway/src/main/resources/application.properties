# server all microservice all place here so without port & URL they can communicate each other
app.eureka-server=localhost
eureka.client.serviceUrl.defaultZone=http://admin:admin@${app.eureka-server}:8761/eureka

#eureka.client.serviceUrl.defaultZone=http://admin:admin@localhost:8761/eureka


#secret key to decrypt token it's same as Auth properties
security.jwt.secret-key=3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b

# GitHub Login
spring.security.oauth2.client.registration.github.client-id=Ov23liL80OeWuyx0Oasa
spring.security.oauth2.client.registration.github.client-secret=ab5db3cb6edaaddf7f48c8daffc23379a262a2c7
#spring.security.oauth2.client.registration.github.scope=email, public_profile

# Google Login
#spring.security.oauth2.client.registration.google.client-id=GOOGLE_CLIENT_ID
#spring.security.oauth2.client.registration.google.client-secret=GOOGLE_CLIENT_SECRET
logging.level.org.springframework.security=TRACE


#Distributed Tracing Zipkin brave to tracking the whole request
# use ca tract the system using http://localhost:9411/zipkin/
#this was running from docker container [docker run -d -p 9411:9411 openzipkin/zipkin]
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability= 1.0

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Actuator Prometheus Endpoint
management.endpoints.web.exposure.include= prometheus